{"version":3,"file":"static/js/919.333e43d8.chunk.js","mappings":"oOAIe,SAASA,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA6BE,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,SAAAC,GAC7BJ,EAAUI,EAAIC,YACfC,OAAM,SAAAC,GAAK,OAAIC,MAAMD,QACxB,CAACX,KAGA,wBACMG,GAAWA,EAAQU,OACbV,EAAQW,KAAI,SAAAC,GAAM,OAClB,2BACI,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFNF,EAAOG,QAIhB,4C,qJCtBpB,IAAMC,EAAU,mCAET,SAASC,IACZ,OAAQC,MAAM,yDAAD,OAA0DF,IAClEZ,MAAK,SAAAC,GACF,OAAKA,EAAIc,GAGFd,EAAIe,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASC,EAAeT,GAC3B,OAAQG,MAAM,sCAAD,OAAuCH,EAAvC,oBAAqDC,EAArD,oBACRZ,MAAK,SAAAC,GACF,OAAKA,EAAIc,GAGFd,EAAIe,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASE,EAAeV,GAC3B,OAAQG,MAAM,sCAAD,OAAuCH,EAAvC,4BAA6DC,EAA7D,oBACRZ,MAAK,SAAAC,GACF,OAAKA,EAAIc,GAGFd,EAAIe,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASpB,EAAkBY,GAC9B,OAAQG,MAAM,sCAAD,OAAuCH,EAAvC,4BAA6DC,EAA7D,2BACRZ,MAAK,SAAAC,GACF,OAAKA,EAAIc,GAGFd,EAAIe,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASG,EAAiBC,GAC7B,OAAQT,MAAM,qDAAD,OAAsDF,EAAtD,iCAAsFW,EAAtF,gCACRvB,MAAK,SAAAC,GACF,OAAKA,EAAIc,GAGFd,EAAIe,OAFAC,QAAQC,OAAO,IAAIC,MAAM","sources":["components/Reviews/Reviews.js","service/fetchMovies.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchMovieReviews } from \"service/fetchMovies\";\n\nexport default function Reviews() {\n    const { movieId } = useParams();\n    const [reviews, seReviews] = useState({});\n\n    useEffect(() => {\n        fetchMovieReviews(movieId).then(res => {\n           seReviews(res.results)\n       }).catch(error => alert(error));\n    }, [movieId])\n\n    return (\n        <ul>\n            {(reviews && reviews.length)\n                ?   reviews.map(review =>\n                    <li key={review.id}>\n                        <h3>{review.author}</h3>\n                        <p>{review.content}</p>\n                    </li>)\n                :   <p>Nothing here</p>\n            }\n        </ul>\n    )\n}","const API_KEY = \"eee74d93b5141c6c12502e44923a7011\";\n\nexport function fetchTrending() {\n    return (fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieById(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieCast(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieReviews(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieByName(name) {\n    return (fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })  \n    )\n}"],"names":["Reviews","movieId","useParams","useState","reviews","seReviews","useEffect","fetchMovieReviews","then","res","results","catch","error","alert","length","map","review","author","content","id","API_KEY","fetchTrending","fetch","ok","json","Promise","reject","Error","fetchMovieById","fetchMovieCast","fetchMovieByName","name"],"sourceRoot":""}