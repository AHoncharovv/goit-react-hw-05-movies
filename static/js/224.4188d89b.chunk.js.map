{"version":3,"file":"static/js/224.4188d89b.chunk.js","mappings":"uQAAA,IAAMA,EAAU,mCAET,SAASC,IACZ,OAAQC,MAAM,yDAAD,OAA0DF,IAClEG,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASC,EAAeC,GAC3B,OAAQT,MAAM,sCAAD,OAAuCS,EAAvC,oBAAqDX,EAArD,oBACRG,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASG,EAAeD,GAC3B,OAAQT,MAAM,sCAAD,OAAuCS,EAAvC,4BAA6DX,EAA7D,oBACRG,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASI,EAAkBF,GAC9B,OAAQT,MAAM,sCAAD,OAAuCS,EAAvC,4BAA6DX,EAA7D,2BACRG,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASK,EAAiBC,GAC7B,OAAQb,MAAM,qDAAD,OAAsDF,EAAtD,iCAAsFe,EAAtF,gCACRZ,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,sG,kHCjDhD,EAAqB,kBAArB,EAAmD,yBAAnD,EAAmF,oBAAnF,EAAgH,sBAAhH,EAA8I,qB,SCI/H,SAASO,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SAEpC,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAeA,OAPAC,EAAAA,EAAAA,YAAU,WACDP,IACLR,EAAAA,EAAAA,IAAiBQ,GAAYnB,MAAK,SAAAC,GAC9BwB,EAAexB,EAAI0B,YACpBC,OAAM,SAAAC,GAAK,OAAIC,MAAMD,QACzB,CAACV,KAGA,iBAAKY,UAAWC,EAAhB,WACI,kBAAMC,SAfO,SAAAC,GACjBA,EAAMC,iBACNjB,EAAgB,CAAEkB,MAAOd,IACzBC,EAAeD,IAYX,WACI,kBACIe,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,GACZC,SAAU,SAAAC,GAAInB,EAAemB,EAAEC,OAAOC,MAAMC,gBAC5CD,MAAOtB,EACPS,UAAWC,KAEf,2BACI,mBAAQK,KAAK,SAASN,UAAWC,EAAjC,0BAKR,eAAID,UAAWC,EAAf,SACMR,GAAeA,EAAYsB,QAAWtB,EAAYuB,KAAI,SAAAC,GAAK,aACzD,yBACI,SAAC,KAAD,CACIC,GAAE,kBAAaD,EAAMxC,IACrB0C,MAAO,CAAEC,KAAMrC,GACfiB,UAAWC,EAHf,mBAIKgB,EAAMI,aAJX,QAIoBJ,EAAMpC,QALrBoC,EAAMxC","sources":["service/fetchMovies.js","webpack://react-homework-template/./src/views/Movie/Movie.module.css?39d0","views/Movie/MoviesView.js"],"sourcesContent":["const API_KEY = \"eee74d93b5141c6c12502e44923a7011\";\n\nexport function fetchTrending() {\n    return (fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieById(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieCast(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieReviews(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieByName(name) {\n    return (fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })  \n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"Movie_li__mR7O7\",\"container\":\"Movie_container__MlxhR\",\"link\":\"Movie_link__92N4P\",\"button\":\"Movie_button__1rCx1\",\"input\":\"Movie_input__mLAD+\"};","import { useState, useEffect } from \"react\";\nimport { useSearchParams, Link, useLocation } from \"react-router-dom\";\nimport { fetchMovieByName } from \"service/fetchMovies\";\nimport s from './Movie.module.css'\n\nexport default function MoviesView() {\n    const location = useLocation();\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieQuery = searchParams.get(\"query\");\n\n    const [searchValue, setSearchValue] = useState('');\n    const [searchMovie, setSearchMovie] = useState({});\n    \n    const handleSubmit = event => {\n        event.preventDefault();\n        setSearchParams({ query: searchValue }); \n        setSearchValue(searchValue);\n    }\n\n    useEffect(() => {\n        if (!movieQuery) { return }\n        fetchMovieByName(movieQuery).then(res => {\n            setSearchMovie(res.results)\n        }).catch(error => alert(error));\n    }, [movieQuery])\n\n    return (\n        <div className={s.container}>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"\"\n                    onChange={e=>{setSearchValue(e.target.value.toLowerCase())}}\n                    value={searchValue}\n                    className={s.input}\n                />\n                <span>\n                    <button type=\"submit\" className={s.button}>\n                        Search  \n                    </button>\n                </span>\n            </form>\n            <ul className={s.li}>\n                {(searchMovie && searchMovie.length) && searchMovie.map(movie => (\n                    <li key={movie.id}>\n                        <Link\n                            to={`/movies/${movie.id}`}\n                            state={{ from: location }}\n                            className={s.link}>\n                            {movie.title ?? movie.name}\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}"],"names":["API_KEY","fetchTrending","fetch","then","res","ok","json","Promise","reject","Error","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","fetchMovieByName","name","MoviesView","location","useLocation","useSearchParams","searchParams","setSearchParams","movieQuery","get","useState","searchValue","setSearchValue","searchMovie","setSearchMovie","useEffect","results","catch","error","alert","className","s","onSubmit","event","preventDefault","query","type","autoComplete","autoFocus","placeholder","onChange","e","target","value","toLowerCase","length","map","movie","to","state","from","title"],"sourceRoot":""}