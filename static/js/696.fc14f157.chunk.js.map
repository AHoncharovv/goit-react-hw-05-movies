{"version":3,"file":"static/js/696.fc14f157.chunk.js","mappings":"uQAAA,IAAMA,EAAU,mCAET,SAASC,IACZ,OAAQC,MAAM,yDAAD,OAA0DF,IAClEG,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASC,EAAeC,GAC3B,OAAQT,MAAM,sCAAD,OAAuCS,EAAvC,oBAAqDX,EAArD,oBACRG,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASG,EAAeD,GAC3B,OAAQT,MAAM,sCAAD,OAAuCS,EAAvC,4BAA6DX,EAA7D,oBACRG,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASI,EAAkBF,GAC9B,OAAQT,MAAM,sCAAD,OAAuCS,EAAvC,4BAA6DX,EAA7D,2BACRG,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASK,EAAiBC,GAC7B,OAAQb,MAAM,qDAAD,OAAsDF,EAAtD,iCAAsFe,EAAtF,gCACRZ,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,sG,kHC9CjC,SAASO,IAAQ,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACpC,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNV,EAAAA,EAAAA,IAAeK,GAASd,MAAK,SAAAC,GACzBiB,EAAQjB,EAAIgB,SACbG,OAAM,SAAAC,GAAK,OAAIC,MAAMD,QACzB,CAACP,KAGA,8BACMG,GAAQA,EAAKM,QACR,wBACEN,EAAKO,KAAI,SAAAC,GAAK,OACX,2BACI,gBACIC,IAAG,yCAAoCD,EAAME,cAC7CC,IAAKH,EAAMb,QAEf,uCAAea,EAAMI,cACrB,uBAAIJ,EAAMb,SANLa,EAAMjB,UASrB","sources":["service/fetchMovies.js","views/Cast/Cast.js"],"sourcesContent":["const API_KEY = \"eee74d93b5141c6c12502e44923a7011\";\n\nexport function fetchTrending() {\n    return (fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieById(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieCast(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieReviews(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieByName(name) {\n    return (fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })  \n    )\n}","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchMovieCast } from \"service/fetchMovies\";\n\nexport default function Cast() {const { movieId } = useParams();\n    const [cast, setCast] = useState({});\n\n    useEffect(() => {\n        fetchMovieCast(movieId).then(res => {\n            setCast(res.cast)\n        }).catch(error => alert(error));\n    }, [movieId])\n\n    return (\n        <>\n            {(cast && cast.length)\n                ? (<ul>\n                    {cast.map(actor => (\n                        <li key={actor.id}>\n                            <img \n                                src={`https://image.tmdb.org/t/p/w300${actor.profile_path}`}\n                                alt={actor.name}>\n                            </img>\n                            <p>Character: {actor.character}</p>\n                            <p>{actor.name}</p>\n                        </li>))}\n                </ul>)\n                : <p>Nothing here...</p> \n            }\n        </>\n    )\n}"],"names":["API_KEY","fetchTrending","fetch","then","res","ok","json","Promise","reject","Error","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","fetchMovieByName","name","Cast","movieId","useParams","useState","cast","setCast","useEffect","catch","error","alert","length","map","actor","src","profile_path","alt","character"],"sourceRoot":""}