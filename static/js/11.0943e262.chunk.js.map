{"version":3,"file":"static/js/11.0943e262.chunk.js","mappings":"sQAAA,IAAMA,EAAU,mCAET,SAASC,IACZ,OAAQC,MAAM,yDAAD,OAA0DF,IAClEG,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASC,EAAeC,GAC3B,OAAQT,MAAM,sCAAD,OAAuCS,EAAvC,oBAAqDX,EAArD,oBACRG,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASG,EAAeD,GAC3B,OAAQT,MAAM,sCAAD,OAAuCS,EAAvC,4BAA6DX,EAA7D,oBACRG,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASI,EAAkBF,GAC9B,OAAQT,MAAM,sCAAD,OAAuCS,EAAvC,4BAA6DX,EAA7D,2BACRG,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASK,EAAiBC,GAC7B,OAAQb,MAAM,qDAAD,OAAsDF,EAAtD,iCAAsFe,EAAtF,gCACRZ,MAAK,SAAAC,GACF,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAO,IAAIC,MAAM,sG,0HC9CjC,SAASO,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAOA,OAJAC,EAAAA,EAAAA,YAAU,YACNrB,EAAAA,EAAAA,MAAgBE,MAAK,SAAAoB,GAAM,OACvBF,EAAUE,EAAOC,YAAUC,OAAM,SAAAC,GAAK,OAAIC,MAAMD,QACrD,KAEC,iCACI,4CACA,wBACKN,GAAUA,EAAOQ,KAAI,SAAAC,GAAK,aACvB,yBACI,SAAC,KAAD,CACIC,GAAE,kBAAaD,EAAMlB,IACrBoB,MAAO,CAACC,KAAMf,GAFlB,mBAGKY,EAAMI,aAHX,QAGoBJ,EAAMd,QAJrBc,EAAMlB","sources":["service/fetchMovies.js","views/Home/HomeView.js"],"sourcesContent":["const API_KEY = \"eee74d93b5141c6c12502e44923a7011\";\n\nexport function fetchTrending() {\n    return (fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieById(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieCast(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieReviews(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieByName(name) {\n    return (fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })  \n    )\n}\n\n// export function fetchPicture(picture, page) {\n//     return (\n\n//         fetch(`https://pixabay.com/api/?q=${picture}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`)\n//             .then(response => {\n//                 if (response.ok) { return response.json() }\n//                 return Promise.reject(new Error(\"Ничего не найдено\"))\n//             })\n//     )\n// }\n\n// useEffect(() => {\n//     if (searchValue === \"\") { return };\n\n//     setIsLoading(true);\n//     fetchPicture(searchValue, page)\n//         .then(response => {\n//             setTotalPages(response.total);\n//             setSearchPicture(prevState => [...prevState, ...response.hits]);\n//         })\n//         .catch(err => {\n//             setError(err)\n//             alert(error)\n//         })\n//         .finally(() => setIsLoading(false))\n// }, [searchValue, page, error])","import { useEffect, useState } from \"react\";\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchTrending } from \"service/fetchMovies\";\n\nexport default function HomeView() {\n    const location = useLocation();\n\n    const [movies, setMovies] = useState([]);\n\n\n    useEffect(() => {\n        fetchTrending().then(result =>\n            setMovies(result.results)).catch(error => alert(error));\n    }, []);\n    return (\n        <>\n            <h2>Trending Today</h2>\n            <ul>\n                {movies && movies.map(movie => (\n                    <li key={movie.id}>\n                        <Link\n                            to={`/movies/${movie.id}`}\n                            state={{from: location }}>\n                            {movie.title ?? movie.name}\n                        </Link>\n                    </li>  \n                ))}\n            </ul>\n        </>\n    )\n}\n"],"names":["API_KEY","fetchTrending","fetch","then","res","ok","json","Promise","reject","Error","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","fetchMovieByName","name","HomeView","location","useLocation","useState","movies","setMovies","useEffect","result","results","catch","error","alert","map","movie","to","state","from","title"],"sourceRoot":""}