{"version":3,"file":"static/js/841.c89bf6ee.chunk.js","mappings":"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","sources":["service/fetchMovies.js","webpack://react-homework-template/./src/views/MovieDetails/MovieDetails.module.css?d4e2","views/MovieDetails/MovieDetails.js"],"sourcesContent":["const API_KEY = \"eee74d93b5141c6c12502e44923a7011\";\n\nexport function fetchTrending() {\n    return (fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieById(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieCast(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieReviews(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieByName(name) {\n    return (fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })  \n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"MovieDetails_li__+UtPT\",\"link\":\"MovieDetails_link__P7Cgn\",\"container\":\"MovieDetails_container__YdSwN\",\"button\":\"MovieDetails_button__VxIyD\",\"img\":\"MovieDetails_img__CjIpP\",\"activeLink\":\"MovieDetails_activeLink__ZEBJL\"};","import { useParams, NavLink, Outlet, useLocation, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState, Suspense } from \"react\";\nimport { fetchMovieById } from \"service/fetchMovies\";\nimport s from './MovieDetails.module.css';\n\nexport default function MovieDetails() {\n    const location = useLocation();\n    let navigate = useNavigate() ;\n    \n    const params = useParams();\n    const movieId = params.movieId;\n\n    const [movieDetails, setMovieDetails] = useState({});\n    const [genres, setGenres] = useState({});\n    \n    useEffect(() => {\n        fetchMovieById(movieId).then(res => {\n            setMovieDetails(res);\n        }).catch(error => alert(error));\n    }, [movieId])\n\n    useEffect(() => {\n        setGenres(movieDetails.genres)\n    }, [movieDetails])\n\n    const goBack = () => {\n        if(location.state.from.search){return navigate(`/movies${location.state.from.search}`, { replace: true })}\n        // if (location.state === null){ return navigate('/', { replace: true }) }\n        navigate(location.state.from.pathname, { replace: true });\n    }\n    \n    return (\n        <div className={s.container}>\n            <button type='button' onClick={goBack} className={s.button}>Go back</button>\n            <h2>{movieDetails.title}</h2>\n            <img \n                src={`https://image.tmdb.org/t/p/w500${movieDetails.backdrop_path}`}\n                alt={movieDetails.title}\n                className={s.img}>\n            </img>\n            <p>{movieDetails.release_date && `Release date: ${movieDetails.release_date}`}</p>\n            <h3>Overview</h3>\n            <span>{movieDetails.overview}</span>\n            <h3>Genres</h3>\n            <ul className={s.li}>\n                {(genres && genres.length) && genres.map(genre => (\n                    <li key={genre.id}>{genre.name}</li>\n                ))}\n            </ul>\n            <hr />\n            <ul className={s.li}>\n                <li className={s.link}>\n                    <NavLink to=\"cast\"\n                        className={({ isActive }) => (isActive ? `${s.activeLink}` : `${s.link}`)}>\n                        Cast\n                    </NavLink></li>\n                <li className={s.link}>\n                    <NavLink to=\"reviews\"\n                        className={({ isActive }) => (isActive ? `${s.activeLink}` : `${s.link}`)}>\n                        Reviews\n                    </NavLink></li>\n            </ul>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />                        \n            </Suspense>\n        </div>     \n    )\n}"],"names":["API_KEY","fetchTrending","fetch","then","res","ok","json","Promise","reject","Error","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","fetchMovieByName","name","MovieDetails","location","useLocation","navigate","useNavigate","movieId","useParams","useState","movieDetails","setMovieDetails","genres","setGenres","useEffect","catch","error","alert","className","s","type","onClick","state","from","search","replace","pathname","title","src","backdrop_path","alt","release_date","overview","length","map","genre","to","isActive","Suspense","fallback"],"sourceRoot":""}