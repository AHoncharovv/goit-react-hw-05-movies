{"version":3,"file":"static/js/228.f35e4ce9.chunk.js","mappings":"oOACA,EAAqB,yBAArB,EAA0D,gCAA1D,EAAmG,6BAAnG,EAAsI,0BAAtI,EAAuK,2BAAvK,EAA+M,iC,SCIhM,SAASA,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACbC,GAAWC,EAAAA,EAAAA,MAITC,GADSC,EAAAA,EAAAA,MACQD,QAEvB,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeR,GAASS,MAAK,SAAAC,GACzBN,EAAgBM,MACjBC,OAAM,SAAAC,GAAK,OAAIC,MAAMD,QACzB,CAACZ,KAEJO,EAAAA,EAAAA,YAAU,WACND,EAAUH,EAAaE,UACxB,CAACF,IAOJ,OACI,iBAAKW,UAAWC,EAAhB,WACI,mBAAQC,KAAK,SAASC,QAPf,WACX,GAAuB,OAAnBrB,EAASsB,MAAiB,OAAOpB,EAAS,IAAK,CAAEqB,SAAS,IAC9DrB,EAASF,EAASsB,MAAME,KAAKC,SAAU,CAAEF,SAAS,KAKPL,UAAWC,EAAlD,sBACA,wBAAKZ,EAAamB,SAClB,gBACIC,IAAG,yCAAoCpB,EAAaqB,eACpDC,IAAKtB,EAAamB,MAClBR,UAAWC,KAEf,uBAAIZ,EAAauB,cAAb,wBAA8CvB,EAAauB,iBAC/D,sCACA,0BAAOvB,EAAawB,YACpB,oCACA,eAAIb,UAAWC,EAAf,SACMV,GAAUA,EAAOuB,QAAWvB,EAAOwB,KAAI,SAAAC,GAAK,OAC1C,wBAAoBA,EAAMC,MAAjBD,EAAME,UAGvB,mBACA,gBAAIlB,UAAWC,EAAf,WACI,yBACI,SAAC,KAAD,CAASkB,GAAG,OACRnB,UAAW,gBAAGoB,EAAH,EAAGA,SAAH,MAA2B,UAARA,EAAcnB,EAAoBA,IADpE,qBAIJ,yBACI,SAAC,KAAD,CAASkB,GAAG,UACRnB,UAAW,gBAAGoB,EAAH,EAAGA,SAAH,MAA2B,UAARA,EAAcnB,EAAoBA,IADpE,2BAKR,SAAC,KAAD,S,qJC9DZ,IAAMoB,EAAU,mCAET,SAASC,IACZ,OAAQC,MAAM,yDAAD,OAA0DF,IAClE1B,MAAK,SAAAC,GACF,OAAKA,EAAI4B,GAGF5B,EAAI6B,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASlC,EAAewB,GAC3B,OAAQK,MAAM,sCAAD,OAAuCL,EAAvC,oBAAqDG,EAArD,oBACR1B,MAAK,SAAAC,GACF,OAAKA,EAAI4B,GAGF5B,EAAI6B,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASC,EAAeX,GAC3B,OAAQK,MAAM,sCAAD,OAAuCL,EAAvC,4BAA6DG,EAA7D,oBACR1B,MAAK,SAAAC,GACF,OAAKA,EAAI4B,GAGF5B,EAAI6B,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASE,EAAkBZ,GAC9B,OAAQK,MAAM,sCAAD,OAAuCL,EAAvC,4BAA6DG,EAA7D,2BACR1B,MAAK,SAAAC,GACF,OAAKA,EAAI4B,GAGF5B,EAAI6B,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASG,EAAiBd,GAC7B,OAAQM,MAAM,qDAAD,OAAsDF,EAAtD,iCAAsFJ,EAAtF,gCACRtB,MAAK,SAAAC,GACF,OAAKA,EAAI4B,GAGF5B,EAAI6B,OAFAC,QAAQC,OAAO,IAAIC,MAAM","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.js","service/fetchMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"li\":\"MovieDetails_li__n5SWj\",\"container\":\"MovieDetails_container__o8VqJ\",\"button\":\"MovieDetails_button__PGjyO\",\"img\":\"MovieDetails_img__D3WH9\",\"link\":\"MovieDetails_link__wf74g\",\"activeLink\":\"MovieDetails_activeLink__yHly6\"};","import { useParams, NavLink, Outlet, useLocation, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieById } from \"service/fetchMovies\";\nimport s from './MovieDetails.module.css';\n\nexport default function MovieDetails() {\n    const location = useLocation();\n    let navigate = useNavigate() ;\n    \n\n    const params = useParams();\n    const movieId = params.movieId;\n\n    const [movieDetails, setMovieDetails] = useState({});\n    const [genres, setGenres] = useState({});\n    \n    useEffect(() => {\n        fetchMovieById(movieId).then(res => {\n            setMovieDetails(res);\n        }).catch(error => alert(error));\n    }, [movieId]);\n\n    useEffect(() => {\n        setGenres(movieDetails.genres)\n    }, [movieDetails]);\n\n    const goBack = () => {\n        if (location.state === null){ return navigate('/', { replace: true }) }\n        navigate(location.state.from.pathname, { replace: true });\n    }\n    \n    return (\n        <div className={s.container}>\n            <button type='button' onClick={goBack} className={s.button}>Go back</button>\n            <h2>{movieDetails.title}</h2>\n            <img \n                src={`https://image.tmdb.org/t/p/w500${movieDetails.backdrop_path}`}\n                alt={movieDetails.title}\n                className={s.img}>\n            </img>\n            <p>{movieDetails.release_date && `Release date: ${movieDetails.release_date}`}</p>\n            <h3>Overview</h3>\n            <span>{movieDetails.overview}</span>\n            <h3>Genres</h3>\n            <ul className={s.li}>\n                {(genres && genres.length) && genres.map(genre => (\n                    <li key={genre.id}>{genre.name}</li>\n                ))}\n            </ul>\n            <hr />\n            <ul className={s.li}>\n                <li>\n                    <NavLink to=\"cast\"\n                        className={({ isActive }) => (isActive ? `${s.activeLink}` : `${s.link}`)}>\n                        Cast\n                    </NavLink></li>\n                <li>\n                    <NavLink to=\"reviews\"\n                        className={({ isActive }) => (isActive ? `${s.activeLink}` : `${s.link}`)}>\n                        Reviews\n                    </NavLink></li>\n            </ul>\n            <Outlet />\n        </div>\n        \n    )\n}","const API_KEY = \"eee74d93b5141c6c12502e44923a7011\";\n\nexport function fetchTrending() {\n    return (fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieById(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieCast(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieReviews(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieByName(name) {\n    return (fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })  \n    )\n}\n\n// export function fetchPicture(picture, page) {\n//     return (\n\n//         fetch(`https://pixabay.com/api/?q=${picture}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`)\n//             .then(response => {\n//                 if (response.ok) { return response.json() }\n//                 return Promise.reject(new Error(\"Ничего не найдено\"))\n//             })\n//     )\n// }\n\n// useEffect(() => {\n//     if (searchValue === \"\") { return };\n\n//     setIsLoading(true);\n//     fetchPicture(searchValue, page)\n//         .then(response => {\n//             setTotalPages(response.total);\n//             setSearchPicture(prevState => [...prevState, ...response.hits]);\n//         })\n//         .catch(err => {\n//             setError(err)\n//             alert(error)\n//         })\n//         .finally(() => setIsLoading(false))\n// }, [searchValue, page, error])"],"names":["MovieDetails","location","useLocation","navigate","useNavigate","movieId","useParams","useState","movieDetails","setMovieDetails","genres","setGenres","useEffect","fetchMovieById","then","res","catch","error","alert","className","s","type","onClick","state","replace","from","pathname","title","src","backdrop_path","alt","release_date","overview","length","map","genre","name","id","to","isActive","API_KEY","fetchTrending","fetch","ok","json","Promise","reject","Error","fetchMovieCast","fetchMovieReviews","fetchMovieByName"],"sourceRoot":""}