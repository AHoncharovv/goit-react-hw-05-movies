{"version":3,"file":"static/js/100.3274ac9e.chunk.js","mappings":"oOAIe,SAASA,IAAQ,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACpC,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeN,GAASO,MAAK,SAAAC,GACzBJ,EAAQI,EAAIL,SACbM,OAAM,SAAAC,GAAK,OAAIC,MAAMD,QACzB,CAACV,KAGA,wBACMG,GAAQA,EAAKS,OACTT,EAAKU,KAAI,SAAAC,GAAK,OACZ,2BACI,gBACIC,IAAG,yCAAoCD,EAAME,cAC7CC,IAAKH,EAAMI,QAEf,uCAAeJ,EAAMK,cACrB,uBAAIL,EAAMI,SANLJ,EAAMM,QAQf,4C,qJCzBpB,IAAMC,EAAU,mCAET,SAASC,IACZ,OAAQC,MAAM,yDAAD,OAA0DF,IAClEd,MAAK,SAAAC,GACF,OAAKA,EAAIgB,GAGFhB,EAAIiB,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASC,EAAeT,GAC3B,OAAQG,MAAM,sCAAD,OAAuCH,EAAvC,oBAAqDC,EAArD,oBACRd,MAAK,SAAAC,GACF,OAAKA,EAAIgB,GAGFhB,EAAIiB,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAAStB,EAAec,GAC3B,OAAQG,MAAM,sCAAD,OAAuCH,EAAvC,4BAA6DC,EAA7D,oBACRd,MAAK,SAAAC,GACF,OAAKA,EAAIgB,GAGFhB,EAAIiB,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASE,EAAkBV,GAC9B,OAAQG,MAAM,sCAAD,OAAuCH,EAAvC,4BAA6DC,EAA7D,2BACRd,MAAK,SAAAC,GACF,OAAKA,EAAIgB,GAGFhB,EAAIiB,OAFAC,QAAQC,OAAO,IAAIC,MAAM,oGAOzC,SAASG,EAAiBb,GAC7B,OAAQK,MAAM,qDAAD,OAAsDF,EAAtD,iCAAsFH,EAAtF,gCACRX,MAAK,SAAAC,GACF,OAAKA,EAAIgB,GAGFhB,EAAIiB,OAFAC,QAAQC,OAAO,IAAIC,MAAM","sources":["components/Cast/Cast.js","service/fetchMovies.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchMovieCast } from \"service/fetchMovies\";\n\nexport default function Cast() {const { movieId } = useParams();\n    const [cast, setCast] = useState({});\n\n    useEffect(() => {\n        fetchMovieCast(movieId).then(res => {\n            setCast(res.cast)\n        }).catch(error => alert(error));\n    }, [movieId])\n\n    return (\n        <ul>\n            {(cast && cast.length)\n                ? cast.map(actor => (\n                    <li key={actor.id}>\n                        <img \n                            src={`https://image.tmdb.org/t/p/w300${actor.profile_path}`}\n                            alt={actor.name}>\n                        </img>\n                        <p>Character: {actor.character}</p>\n                        <p>{actor.name}</p>\n                    </li>))\n                :   <p>Nothing here</p> \n            }\n        </ul>\n    )\n}","const API_KEY = \"eee74d93b5141c6c12502e44923a7011\";\n\nexport function fetchTrending() {\n    return (fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieById(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieCast(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieReviews(id) {\n    return (fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })\n    )\n}\n\nexport function fetchMovieByName(name) {\n    return (fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(new Error(\"Ничего не найдено\"))\n            }\n            return res.json();\n        })  \n    )\n}\n\n// export function fetchPicture(picture, page) {\n//     return (\n\n//         fetch(`https://pixabay.com/api/?q=${picture}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`)\n//             .then(response => {\n//                 if (response.ok) { return response.json() }\n//                 return Promise.reject(new Error(\"Ничего не найдено\"))\n//             })\n//     )\n// }\n\n// useEffect(() => {\n//     if (searchValue === \"\") { return };\n\n//     setIsLoading(true);\n//     fetchPicture(searchValue, page)\n//         .then(response => {\n//             setTotalPages(response.total);\n//             setSearchPicture(prevState => [...prevState, ...response.hits]);\n//         })\n//         .catch(err => {\n//             setError(err)\n//             alert(error)\n//         })\n//         .finally(() => setIsLoading(false))\n// }, [searchValue, page, error])"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","fetchMovieCast","then","res","catch","error","alert","length","map","actor","src","profile_path","alt","name","character","id","API_KEY","fetchTrending","fetch","ok","json","Promise","reject","Error","fetchMovieById","fetchMovieReviews","fetchMovieByName"],"sourceRoot":""}